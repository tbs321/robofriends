{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,yBAAKC,UAAW,uDAChB,yBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,6BACA,4BAAKL,GACL,2BAAIC,MCcSK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,6BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,kBAAC,EAAD,CACAC,IAAMD,EACNR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCEPW,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,yBAAKV,UAAU,OACf,2BACAA,UAAW,mCACXW,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCGI,EARA,SAACC,GACf,OACC,yBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,UAChEJ,EAAMK,WCyCMC,G,wDArCd,aAAc,IAAD,8BACZ,gBAaDC,eAAgB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAM,CACVxB,OAAQ,GACRqB,YAAa,IAJF,E,qDAQb,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBAOxC,WACC,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVU,EAAiB/B,EAAOgC,QAAO,SAAAC,GACpC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASd,EAAYa,kBAEtD,OAAQlC,EAAOoC,OAGd,yBAAKxC,UAAY,MACjB,wBAAIA,UAAY,MAAhB,eACA,kBAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUlB,OAAU+B,MANrB,2C,GAzBgBM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.752cbca3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t\t<div className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\n\t\t<div>\n\t\t<h2>{name}</h2>\n\t\t<p>{email}</p>\n\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\treturn(\n\t\t<div>\n\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn( \t\n\t\t\t\t\t<Card\n\t\t\t\t\tkey= {i}\n\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\tname={robots[i].name}\n\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div>\n\t\t);\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn(\n\t\t<div className='pa2'>\n\t\t<input \n\t\tclassName ='pa3 ba b--green bg-lightest-blue'\n\t\ttype='search' \n\t\tplaceholder='search robots'\n\t\tonChange={searchChange}\n\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflow:'scroll', border:'5px solid black', height:'800px'}}>\n\t\t{props.children}\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\n//to use state you have to change App function to a class so you can use constructor function\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users}));\n\t}\n\n\tonSearchChange =(event) => {\n\t\tthis.setState({searchfield: event.target.value})\n\t}\n\n\trender(){\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\treturn !robots.length ?\n\t\t<h1>Loading</h1> :\n\t\t(\n\t\t\t<div className = 'tc'>\n\t\t\t<h1 className = 'f1'>RoboFriends</h1>\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t<CardList robots = {filteredRobots}/>\t\n\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n\n  // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}